Lab Test Script


Commands to build the Linux test platform (Dev)
------------------------------------------------
sudo apt update
sudo apt install -y git
curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
sudo apt-get install -y nodejs

git clone https://github.com/brianeiler/gcp-gke-monitoring.git

npm install -S body-parser
npm install -S googleapis
npm install -S @google-cloud/monitoring
npm install -S express





=== Basic GKE Build ===
export my_zone=us-central1-a
export my_cluster=standard-cluster-1
source <(kubectl completion bash)
gcloud container clusters create $my_cluster --num-nodes "3" --enable-stackdriver-kubernetes --enable-ip-alias --zone $my_zone


=== Hello-v2 Deployment ===
kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatformTraining/training-data-analyst/master/courses/ak8s/17_Stackdriver/hello-v2.yaml
kubectl get deployments


=== Custom-Metrics-Stackdriver-Adapter ===
kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user $(gcloud config get-value account)
kubectl apply -f https://raw.githubusercontent.com/GoogleCloudPlatform/k8s-stackdriver/master/custom-metrics-stackdriver-adapter/deploy/production/adapter_new_resource_model.yaml
kubectl get deployments -n custom-metrics



=== Resource Consumer Test ===
*** kubectl run resource-consumer --image=gcr.io/kubernetes-e2e-test-images/resource-consumer:1.4 --expose --service-overrides='{ "spec": { "type": "LoadBalancer" } }' --port 8080 --requests='cpu=500m,memory=256Mi'
kubectl create -f resource-consumer.yaml
kubectl get services resource-consumer-service
curl --data "millicores=300&durationSec=600" http://<EXTERNAL-IP>/ConsumeCPU

